################################################################################
# Copyright 2018 spriteCloud B.V. All rights reserved.
# Generated by LapisLazuli, version 2.1.4
# Author: "spriteCloud B.V." <info@spritecloud.com>
#
# Cucumber profiles are used to group certain tags and variables
# This way you can run specific scenario's on specific environments.

<% timestamp = Time.now.strftime("%Y%m%d_%H%M") %>

################################################################################
# Type of testrun
default: -f pretty -x
debug: -f pretty BREAKPOINT_ON_FAILURE=1
html_report: -f pretty -f html --out=results/<%=timestamp%>_report.html
junit_report: -f pretty -f junit --out=results

################################################################################
# Supported browsers (default = chrome)
chrome: BROWSER=chrome
ff: BROWSER=firefox
firefox: BROWSER=firefox

################################################################################
# Listed environments (default is set in config.yml)
t: -p test
test: TEST_ENV=test -t '@t or @test or @all_env or @all_environments' -t 'not @disabled_on_test'
# When you run cucumber -p t
# 1. t: -p test > will call profile `test`
# 2. TEST_ENV=test > Sets a ruby variable ENV['TEST_ENV'] = 'test'
# 3. '@t or @test or @all_env or @all_environments' > Runs all features / scenario's that include either one of these tags
# 4. -t 'not @disabled_on_test' > Will not run any feature / scenario that includes this that
# A scenario including '@test @disabled_on_test', will be ignored!

a: -p acceptance
acc: -p acceptance
accpetance: TEST_ENV=acceptance -t '@a or @acceptance or @all_env or @all_environments' -t 'not @disabled_on_acceptance' -t 'not @disabled_on_acc'

p: -p production
prod: -p production
production: TEST_ENV=production -t '@p or @prod or @production or @all_env or @all_environments' -t 'not @disabled_on_production' -t 'not @disabled_on_prod'

################################################################################
# The following is another exmaple of creating (and combining) profiles. In this one we use Version. But it could be anything really.
# With version profile you can easily combine a certain environment with a version
# An then include (or exclude) certain scenario's that are only available on a specific version.
# E.G.: bundle exec cucucumber -p acceptance -p version_14

v_12: -p version_12
version_12: VERSION=12 -t '@v_12 or @ver_12 or @version_12 or @all_versions' -t 'not @disabled_on_ver_12' -t 'not @disabled_on_version_12'

v_14: -p version_14
version_14: VERSION=14 -t '@v_14 or @ver_14 or @version_14 or @all_versions' -t 'not @disabled_on_ver_14' -t 'not @disabled_on_version_14'

################################################################################
# A few example cucumber commands you could execute:
# Run all acceptance tests
# bundle exec cucumber -p acc
#
# Only test a specific scenario on production
# bundle exec cucumber -p prod -t @login
#
# Use the default environment set in config.yml and run a specific tag with extended output
# bundle exec cucumber -t @test_24 -x
